Messages
=========================
SPIM Version 8.0 of January 8, 2010
Copyright 1990-2010, James R. Larus.
All Rights Reserved.
DOS and Windows ports by David A. Carley.
Copyright 1997, Morgan Kaufmann Publishers, Inc.
See the file README for a full copyright notice.
Memory and registers cleared and the simulator reinitialized.

SPIM Version 8.0 of January 8, 2010
Copyright 1990-2010, James R. Larus.
All Rights Reserved.
DOS and Windows ports by David A. Carley.
Copyright 1997, Morgan Kaufmann Publishers, Inc.
See the file README for a full copyright notice.
D:\FPGAJX\ZC_EXP\EXP9_RI_CPU\RI_CPU_Test.asm successfully loaded


Registers
=========================
 PC      = 00000000   EPC     = 00000000   Cause   = 00000000   BadVAddr= 00000000
 Status  = 3000ff10   HI      = 00000000   LO      = 00000000
                                 General Registers
R0  (r0) = 00000000  R8  (t0) = 00000000  R16 (s0) = 00000000  R24 (t8) = 00000000
R1  (at) = 00000000  R9  (t1) = 00000000  R17 (s1) = 00000000  R25 (t9) = 00000000
R2  (v0) = 00000000  R10 (t2) = 00000000  R18 (s2) = 00000000  R26 (k0) = 00000000
R3  (v1) = 00000000  R11 (t3) = 00000000  R19 (s3) = 00000000  R27 (k1) = 00000000
R4  (a0) = 00000000  R12 (t4) = 00000000  R20 (s4) = 00000000  R28 (gp) = 00000000
R5  (a1) = 00000000  R13 (t5) = 00000000  R21 (s5) = 00000000  R29 (sp) = 7ffff894
R6  (a2) = 7ffff89c  R14 (t6) = 00000000  R22 (s6) = 00000000  R30 (s8) = 00000000
R7  (a3) = 00000000  R15 (t7) = 00000000  R23 (s7) = 00000000  R31 (ra) = 00000000

 FIR    = 00009800    FCSR    = 00000000    FCCR   = 00000000   FEXR    = 00000000
 FENR   = 00000000
                              Double Floating Point Registers
FP0  = 0.000000      FP8  = 0.000000      FP16 = 0.000000      FP24 = 0.000000     
FP2  = 0.000000      FP10 = 0.000000      FP18 = 0.000000      FP26 = 0.000000     
FP4  = 0.000000      FP12 = 0.000000      FP20 = 0.000000      FP28 = 0.000000     
FP6  = 0.000000      FP14 = 0.000000      FP22 = 0.000000      FP30 = 0.000000     
                              Single Floating Point Registers
FP0  = 0.000000      FP8  = 0.000000      FP16 = 0.000000      FP24 = 0.000000     
FP1  = 0.000000      FP9  = 0.000000      FP17 = 0.000000      FP25 = 0.000000     
FP2  = 0.000000      FP10 = 0.000000      FP18 = 0.000000      FP26 = 0.000000     
FP3  = 0.000000      FP11 = 0.000000      FP19 = 0.000000      FP27 = 0.000000     
FP4  = 0.000000      FP12 = 0.000000      FP20 = 0.000000      FP28 = 0.000000     
FP5  = 0.000000      FP13 = 0.000000      FP21 = 0.000000      FP29 = 0.000000     
FP6  = 0.000000      FP14 = 0.000000      FP22 = 0.000000      FP30 = 0.000000     
FP7  = 0.000000      FP15 = 0.000000      FP23 = 0.000000      FP31 = 0.000000     


Console
=========================


Text Segment
=========================
[0x00400000]        0x38011234  xori $1, $0, 4660               ; 2: xori        $1,        $0,        0x1234;                #$1=0000_1234
[0x00400004]        0x20026789  addi $2, $0, 26505              ; 3: addi        $2,        $0,        0x6789;                #$2=0000_6789
[0x00400008]        0x20039000  addi $3, $0, -28672             ; 4: addi         $3,        $0,        -0x7000;        #$3=FFFF_9000
[0x0040000c]        0x38040010  xori $4, $0, 65535              ; 5: xori        $4,        $0,        0x0010;                #$4=0000_0010
[0x00400010]        0x00822804  sllv $5, $2, $4                 ; 6: sllv        $5,        $2,        $4;                #$5=6789_0000
[0x00400014]        0x00253025  or $6, $1, $5                   ; 7: or        $6,        $1,        $5;                #$6=6789_1234
[0x00400018]        0x00833804  sllv $7, $3, $4                 ; 8: sllv        $7,        $3,        $4;                #$7=9000_0000
[0x0040001c]        0x00464020  add $8, $2, $6                  ; 9: add        $8,        $2,        $6;                #$8=6789_79BD
[0x00400020]        0x00414822  sub $9, $2, $1                  ; 10: sub        $9,        $2,        $1;                #$9=0000_5555
[0x00400024]        0x00225022  sub $10, $1, $2                 ; 11: sub        $10,        $1,        $2;                #$10=FFFF_AAAB
[0x00400028]        0x206b7fff  addi $11, $3, 32767             ; 12: addi        $11,        $3,        0x7FFF;                #$11=0000_0FFF
[0x0040002c]        0x206c8000  addi $12, $3, -32768            ; 13: addi        $12,        $3,        -0x8000;        #$12=FFFF_1000
[0x00400030]        0x314dffff  andi $13, $10, -1               ; 14: andi        $13,        $10,        0xFFFF;                #$13=0000_AAAB
[0x00400034]        0x2c4e6788  sltiu $14, $2, 26504            ; 15: sltiu        $14,        $2,        0x6788;                #$14=0000_0000
[0x00400038]        0x2c4f678a  sltiu $15, $2, 26506            ; 16: sltiu        $15,        $2,        0x678A;                #$15=0000_0001
[0x0040003c]        0xac8b0000  sw $11, 0($4)                   ; 17: sw        $11,        0($4);                        #mem(0000_0010)=0000_0FFF
[0x00400040]        0xac0c0014  sw $12, 20($0)                  ; 18: sw        $12,        20($0);                        #mem(0000_0014)=FFFF_1000
[0x00400044]        0xac8d0010  sw $13, 16($4)                  ; 19: sw        $13,        16($4);                        #mem(0000_0020)=0000_AAAB
[0x00400048]        0xac8e0014  sw $14, 20($4)                  ; 20: sw        $14,        20($4);                        #mem(0000_0024)=0000_0000
[0x0040004c]        0x8c100010  lw $16, 16($0)                  ; 21: lw        $16,        16($0);                        #$16=mem(0000_0010)=0000_0FFF
[0x00400050]        0x8c910004  lw $17, 4($4)                   ; 22: lw        $17,        4($4);                        #$17=mem(0000_0014)=FFFF_1000
[0x00400054]        0x02119025  or $18, $16, $17                ; 23: or        $18,        $16,        $17;                #$18=FFFF_1FFF
[0x00400058]        0x8c930010  lw $19, 16($4)                  ; 24: lw        $19,        16($4);                        #$19=mem(0000_0020)=0000_AAAB
[0x0040005c]        0x8c940014  lw $20, 20($4)                  ; 25: lw        $20,        20($4);                        #$20=mem(0000_0024)=0000_0000
[0x00400060]        0x0274a827  nor $21, $19, $20               ; 26: nor        $21,        $19,        $20;                #$21=FFFF_5554
[0x00400064]        0x8c96fff0  lw $22, -16($4)                 ; 27: lw        $22,        -0x10($4);                #$22=mem(0000_0000)=8888_8888
[0x00400068]        0x8c97fff4  lw $23, -12($4)                 ; 28: lw        $23,        -0x0C($4);                #$23=mem(0000_0004)=9999_9999
[0x0040006c]        0x02d7c02b  sltu $24, $22, $23              ; 29: sltu        $24,        $22,        $23                #$24=?  =0000_0001

        KERNEL


Data Segment
=========================
        DATA
[0x10000000]...[0x10040000]        0x00000000

        STACK
[0x7ffff894]                        0x00000000  0x00000000  0x7fffffcf

        KERNEL DATA
[0x90000000]...[0x90010000]        0x00000000


